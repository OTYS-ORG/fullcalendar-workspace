
.fcnew {
  display: flex;
  flex-direction: column;

  &,
  & *,
  & *:before,
  & *:after {
    box-sizing: border-box;
  }
}

.fcnew-direction-ltr {
  direction: ltr;
  text-align: left;
}

.fcnew-direction-rtl {
  direction: rtl;
  text-align: right;
}

// ViewHarness
// -------------------------------------------------------------------------------------------------

.fcnew-view-harness {
  position: relative; // for aspectratio AND for being origin for premium-message at bottom-left corner
}

.fcnew-view-harness-fixedheight {
  display: flex;
  flex-direction: column;
}

.fcnew-view-harness-fixedheight > .fcnew-view {
  // liquid
  flex-basis: 0;
  flex-grow: 1;
  min-height: 0;
}

.fcnew-view-harness-aspectratio > .fcnew-view {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// NavLink
// -------------------------------------------------------------------------------------------------

.fcnew a[data-navlink] {
  cursor: pointer;
}

.fcnew a[data-navlink]:hover {
  text-decoration: underline;
}

// Flexbox Utils
// -------------------------------------------------------------------------------------------------

.fcnew-flex-row {
  display: flex;
  flex-direction: row;
}

.fcnew-flex-column {
  display: flex;
  flex-direction: column;
}

.fcnew-grow {
  flex-grow: 1;
}

/*
Only important if there are siblings that are expanding too.
Rarely used. Just inline this?
*/
.fcnew-basis0 {
  flex-basis: 0;
}

.fcnew-liquid {
  flex-grow: 1;
  flex-basis: 0;
  min-width: 0;
  min-height: 0;
}

// Table Utils
// -------------------------------------------------------------------------------------------------

.fcnew-row {
  display: flex;
  flex-direction: row;
}

/*
like an fcnew-row, but DOES NOT FORCE CHILDREN TO BE CELLS
*/
.fcnew-rowgroup {
  display: flex;
  flex-direction: column;
}

/*
TODO: move utils into a different file

TODO: because of cell first-child issue, spreadsheet columns don't align
  need to devise similar solution where parent doesn't have a border, and first-child border is preserved
    - for spreadsheet cols
    - for virtualization scrolling of resources (first row should have top border)
    - for timegrid's abs-positioned cols needing left-inset from axis
*/

.fcnew-row,
.fcnew-rowgroup,
.fcnew-rowdivider {
  border-style: solid;
  border-color: var(--fcnew-border-color);
  border-width: 1px 0 0; // top
}

// kill top border
// (first-child)
.fcnew-row:first-child:not(.fcnew-not-first),
.fcnew-rowgroup:first-child,
.fcnew-rowdivider:first-child,
// (when below a header/divider)
.fcnew-sticky-header + .fcnew-row, // TODO: move to fcnew-rowgroup-sticky?
.fcnew-sticky-header + .fcnew-rowgroup,
.fcnew-rowdivider + .fcnew-row,
.fcnew-rowdivider + .fcnew-rowgroup { // TODO: combine this with above
  border-top-width: 0;
}

.fcnew-cell,
.fcnew-celldivider {
  border: 0 solid var(--fcnew-border-color);
}

.fcnew-direction-ltr {
  & .fcnew-cell,
  & .fcnew-celldivider {
    border-left-width: 1px;
  }

  // kill left border
  // (first-child)
  & .fcnew-cell:first-child:not(.fcnew-not-first),
  // (when right of a divider)
  & .fcnew-celldivider + .fcnew-cell {
    border-left-width: 0;
  }

  // takeover right border
  & .fcnew-celldivider {
    border-right-width: 1px;
  }
}

.fcnew-direction-rtl {
  & .fcnew-cell,
  & .fcnew-celldivider {
    border-right-width: 1px;
  }

  // kill right border
  // (first-child)
  & .fcnew-cell:first-child:not(.fcnew-not-first),
  // (when left of a divider)
  & .fcnew-celldivier + .fcnew-cell {
    border-right-width: 0;
  }

  // takeover left border
  & .fcnew-celldivider {
    border-left-width: 1px;
  }
}

/*
Lone cell in a row should always fill row. Makes axis widths much easier
*/
.fcnew-cell:only-child {
  flex-grow: 1;
  flex-basis: 0;
  min-width: 0;
}

.fcnew-rowdivider,
.fcnew-celldivider {
  background: var(--fcnew-neutral-bg-color);
}

.fcnew-celldivider {
  padding-left: 2px;
}
.fcnew-rowdivider {
  padding-bottom: 2px; // can use just height if we move towards content-box!
}

// takeover bottom border
.fcnew-rowdivider,
.fcnew-sticky-header {
  border-bottom-width: 1px; // takeover the bottom border
}

// Misc Utils
// -------------------------------------------------------------------------------------------------

.fcnew-rel {
  position: relative;
}

.fcnew-abs {
  position: absolute;
}

.fcnew-absfill { // rename?
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.fcnew-absfill-x { // rename?
  position: absolute;
  left: 0;
  right: 0;
}

.fcnew-v-sticky {
  position: sticky;
  top: 0;
  bottom: 0;
}

.fcnew-sticky-header {
  position: sticky;
  top: 0;
  background: var(--fcnew-page-bg-color);
  z-index: 999; // TODO: what was it before?
}

.fcnew-sticky-footer {
  position: sticky;
  bottom: 0;
  z-index: 999; // TODO: what was it before?
}

.fcnew-h-sticky {
  position: sticky;
  left: 0;
  right: 0;
}

/*
Only needed when padding/border must be separate from width/height
*/
.fcnew-content-box {
  box-sizing: content-box;
}

.fcnew-bordered {
  border: 1px solid var(--fcnew-border-color);
}

.fcnew-offscreen {
  position: absolute;
  left: -10000px;
}

.fcnew-shaded {
  background-color: var(--fcnew-neutral-bg-color);
}
